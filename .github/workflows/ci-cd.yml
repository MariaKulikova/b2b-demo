name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Lint and Test
  test:
    name: 🧪 Tests & Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🏗️ Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 📦 Install dependencies
      run: pnpm install
      
    - name: 🔍 Run ESLint
      run: pnpm lint
      
    - name: 🎭 Install Playwright browsers
      run: pnpm exec playwright install --with-deps
      
    - name: 🧪 Run BDD tests
      run: pnpm test:bdd:basic
      continue-on-error: true
      
    - name: 📊 Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: reports/
        retention-days: 7

  # Job 2: Build
  build:
    name: 🏗️ Build Project
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🏗️ Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 📦 Install dependencies
      run: pnpm install
      
    - name: 🏗️ Build project
      run: pnpm build
      
    - name: 📦 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 1

  # Job 3: Deploy to GitHub Pages
  deploy:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      contents: read    # to checkout the repository
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 🏗️ Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: 📦 Install dependencies
      run: pnpm install
      
    - name: 🏗️ Build for production
      run: |
        pnpm build
        cp dist/index.html dist/404.html
        cp .nojekyll dist/
      env:
        NODE_ENV: production
        
    - name: 📄 Setup Pages
      uses: actions/configure-pages@v3
      
    - name: 📦 Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./dist
        
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2